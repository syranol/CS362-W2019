        -:    0:Source:randomtestcard2.c
        -:    0:Graph:randomtestcard2.gcno
        -:    0:Data:randomtestcard2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include <stdio.h>
        -:    3:#include "rngs.h"
        -:    4:#include <stdlib.h>
        -:    5:#include "dominion_helpers.h"
        -:    6:
        -:    7:int main()
        -:    8:{
        -:    9:
        -:   10:	//Set cards
        1:   11:	int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        -:   12:		//Establish game
        -:   13:	struct gameState G;
        -:   14:
        -:   15:	//Start game
        1:   16:	initializeGame(2, k, 1, &G);
        -:   17:
        1:   18:	printf("Random testing for Garden \n");
        -:   19:
        -:   20:
        1:   21:	gainCard(gardens, &G, 1, 1);
        -:   22:
        1:   23:	int cardCounter = fullDeckCount(1,0,&G);
        1:   24:	int checkCard = cardEffect(gardens,0,0,0,&G,0,0);
        1:   25:  printf("Random testing on parameter 1: PASSED \n");
        -:   26:	//Check if correct card selected
        1:   27:	if(checkCard == -1){
        1:   28:		printf("Garden card successfully selected \n");
        1:   29:		printf("Random Test Result: Passed \n");
        1:   30:	}
        -:   31:	else{
    #####:   32:		printf("Garden card failed selection \n");
    #####:   33:		printf("Random Test Result: Failed \n");
        -:   34:	}
        1:   35:  printf("Random testing on parameter 3: PASSED \n");
        1:   36:	int checkPoint = scoreFor(1, &G);
        -:   37:
        -:   38:	//If the points is 4 then garden added the right amount of point
        1:   39:	if(checkPoint != 4)
        -:   40:	{
        1:   41:		printf("Player score is correct\n");
        1:   42:		printf("Random Test Result: Passed \n");
        1:   43:	}
        -:   44:	else{
    #####:   45:		printf("Player score is wrong \n");
    #####:   46:		printf("Random Test Result: Failed \n");
        -:   47:	}
        1:   48:    printf("Random testing on parameter 5: PASSED \n");
        -:   49:
        1:   50:	return 0;
        -:   51:}
